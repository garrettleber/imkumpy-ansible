---
##### sshd #####
- name: Restart sshd
  ansible.builtin.systemd:
    name: sshd
    state: restarted

##### postfix #####
- name: Restart postfix
  ansible.builtin.systemd:
    name: postfix
    state: restarted

##### iptables #####
- name: Set the iptables ipv6 policies
  ansible.builtin.iptables:
    ip_version: ipv6
    chain: "{{ item.chain }}"
    policy: "{{ item.policy }}"
  loop:
    - chain: INPUT
      policy: DROP
    - chain: FORWARD
      policy: ACCEPT
    - chain: OUTPUT
      policy: ACCEPT
  listen: Set iptables policies

- name: Set the iptables ipv4 policies
  ansible.builtin.iptables:
    ip_version: ipv4
    chain: "{{ item.chain }}"
    policy: "{{ item.policy }}"
  loop:
    - chain: INPUT
      policy: DROP
    - chain: FORWARD
      policy: ACCEPT
    - chain: OUTPUT
      policy: ACCEPT
  listen: Set iptables policies

- name: Save iptables configuration
  ansible.builtin.shell: iptables-save > /etc/iptables/rules.v4 && ip6tables-save > /etc/iptables/rules.v6

##### swap #####
- name: Make swap file
  ansible.builtin.command: mkswap /swapfile
  listen: "init swap"

- name: Run swapon on the swap file
  ansible.builtin.command: swapon /swapfile
  listen: "init swap"

##### disable-ipv6 #####
- name: Reload kernel configuration
  ansible.builtin.command: sysctl -p

##### general #####
- name: Check if reboot is required
  ansible.builtin.stat:
    path: /var/run/reboot-required
  register: reboot_required
  listen: "reboot-required"

- name: Reboot instance if required
  ansible.builtin.reboot:
  throttle: 1
  when: reboot_required.stat.exists
  listen: "reboot-required"
